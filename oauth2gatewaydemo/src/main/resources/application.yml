spring:
  application:
    name: gateway
  cloud:
    gateway:
      #default-filters:
        #- TokenRelay
      routes:
        - id: USERSERVICE
          uri: http://localhost:7072
          predicates:
            - Path=/swagger-ui.html, /v3/api-docs/**, /swagger-ui/**,/users/**,/roles/**
          filters:
            - RewritePath=/USERSERVICE/(?<segment>.*), /$\\{segment}
      discovery:
        locator:
          enabled: true
  security:
    oauth2:
      client:
        provider:
          keycloak:
            token-uri: http://localhost:7070/auth/realms/master/protocol/openid-connect/token
            authorization-uri: http://localhost:7070/auth/realms/master/protocol/openid-connect/auth
            userinfo-uri: http://localhost:7070/auth/realms/master/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
        registration:
          keycloak-with-sre-scope:
            provider: keycloak
            client-id: user3
            client-secret: aA9lTeard5DgfAfnTii1Lu38l6z3SCO7
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
          keycloak-with-architect-scope:
            provider: keycloak
            client-id: user4
            client-secret: So39DejcXFMSiv2WN4IRR8I3hyG5nt0l
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
  securitySchemes:
    my_oAuth_security_schema:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://localhost:7070/oauth2/authorize
          scopes:
            read_access: read data
            write_access: modify data

server.port: 7060

logging.level:
  org.springframework.cloud.gateway: DEBUG
  org.springframework.security: DEBUG
  org.springframework.web.reactive.function.client: TRACE